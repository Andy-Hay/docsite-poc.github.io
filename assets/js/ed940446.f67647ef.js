"use strict";(self.webpackChunkdocsite_poc_github_io=self.webpackChunkdocsite_poc_github_io||[]).push([[70096],{3905:(e,o,t)=>{t.d(o,{Zo:()=>c,kt:()=>f});var n=t(67294);function r(e,o,t){return o in e?Object.defineProperty(e,o,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[o]=t,e}function a(e,o){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);o&&(n=n.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var o=1;o<arguments.length;o++){var t=null!=arguments[o]?arguments[o]:{};o%2?a(Object(t),!0).forEach((function(o){r(e,o,t[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(t,o))}))}return e}function s(e,o){if(null==e)return{};var t,n,r=function(e,o){if(null==e)return{};var t,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],o.indexOf(t)>=0||(r[t]=e[t]);return r}(e,o);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],o.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=n.createContext({}),p=function(e){var o=n.useContext(l),t=o;return e&&(t="function"==typeof e?e(o):i(i({},o),e)),t},c=function(e){var o=p(e.components);return n.createElement(l.Provider,{value:o},e.children)},d={inlineCode:"code",wrapper:function(e){var o=e.children;return n.createElement(n.Fragment,{},o)}},u=n.forwardRef((function(e,o){var t=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(t),f=r,m=u["".concat(l,".").concat(f)]||u[f]||d[f]||a;return t?n.createElement(m,i(i({ref:o},c),{},{components:t})):n.createElement(m,i({ref:o},c))}));function f(e,o){var t=arguments,r=o&&o.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=u;var s={};for(var l in o)hasOwnProperty.call(o,l)&&(s[l]=o[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<a;p++)i[p]=t[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},4126:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var n=t(87462),r=(t(67294),t(3905));const a={title:"Snowflake Loader",date:"2020-04-25",sidebar_position:200},i=void 0,s={unversionedId:"migrated/pipeline-components-and-applications/loaders-storage-targets/snowplow-snowflake-loader/index",id:"migrated/pipeline-components-and-applications/loaders-storage-targets/snowplow-snowflake-loader/index",title:"Snowflake Loader",description:"The Snowflake Loader consists of two independent applications:",source:"@site/docs/migrated/pipeline-components-and-applications/loaders-storage-targets/snowplow-snowflake-loader/index.md",sourceDirName:"migrated/pipeline-components-and-applications/loaders-storage-targets/snowplow-snowflake-loader",slug:"/migrated/pipeline-components-and-applications/loaders-storage-targets/snowplow-snowflake-loader/",permalink:"/docsite-poc.github.io/docs/migrated/pipeline-components-and-applications/loaders-storage-targets/snowplow-snowflake-loader/",draft:!1,tags:[],version:"current",sidebarPosition:200,frontMatter:{title:"Snowflake Loader",date:"2020-04-25",sidebar_position:200},sidebar:"tutorialSidebar",previous:{title:"R32 Upgrade Guide",permalink:"/docsite-poc.github.io/docs/migrated/pipeline-components-and-applications/loaders-storage-targets/snowplow-rdb-loader-3-0-0/previous-versions/snowplow-rdb-loader/upgrade-guides/r32-upgrade-guide/"},next:{title:"Setup",permalink:"/docsite-poc.github.io/docs/migrated/pipeline-components-and-applications/loaders-storage-targets/snowplow-snowflake-loader/setup/"}},l={},p=[],c={toc:p};function d(e){let{components:o,...t}=e;return(0,r.kt)("wrapper",(0,n.Z)({},c,t,{components:o,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The Snowflake Loader consists of two independent applications:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Snowplow Snowflake Transformer - Spark job responsible for transformning enriched events into Snowflake-compatible format"),(0,r.kt)("li",{parentName:"ul"},"Snowplow Snowflake Loader - CLI application responsible for loading Snowplow-compatible enriched events into Snowflake DB")),(0,r.kt)("p",null,'Both applications communicate through DynamoDB table, called "processing manifest" and used to maintain pipeline state. Both applications use same self-describing JSON configuration file of ',(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/snowplow/iglu-central/master/schemas/com.snowplowanalytics.snowplow.storage/snowflake_config/jsonschema/1-0-3"},"schema")," ",(0,r.kt)("inlineCode",{parentName:"p"},"com.snowplowanalytics.snowplow.storage/snowflake_config/jsonschema/1-0-3"),", which contain both transformer- and loader-specific properties."),(0,r.kt)("p",null,"The Snowflake loader is publicly available since version 0.3.1."))}d.isMDXComponent=!0}}]);