"use strict";(self.webpackChunkdocsite_poc_github_io=self.webpackChunkdocsite_poc_github_io||[]).push([[4421],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(n),m=a,g=u["".concat(c,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(g,i(i({ref:t},p),{},{components:n})):r.createElement(g,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1004:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(87462),a=(n(67294),n(3905));const o={title:"Snowplow event extractor",date:"2021-03-26",sidebar_position:1040},i=void 0,s={unversionedId:"migrated/modeling-your-data/analytics-sdk/analytics-sdk-net/snowplow-event-extractor/index",id:"migrated/modeling-your-data/analytics-sdk/analytics-sdk-net/snowplow-event-extractor/index",title:"Snowplow event extractor",description:"Overview",source:"@site/docs/migrated/modeling-your-data/analytics-sdk/analytics-sdk-net/snowplow-event-extractor/index.md",sourceDirName:"migrated/modeling-your-data/analytics-sdk/analytics-sdk-net/snowplow-event-extractor",slug:"/migrated/modeling-your-data/analytics-sdk/analytics-sdk-net/snowplow-event-extractor/",permalink:"/docsite-poc.github.io/docs/migrated/modeling-your-data/analytics-sdk/analytics-sdk-net/snowplow-event-extractor/",draft:!1,tags:[],version:"current",sidebarPosition:1040,frontMatter:{title:"Snowplow event extractor",date:"2021-03-26",sidebar_position:1040},sidebar:"tutorialSidebar",previous:{title:"Analytics SDK - .NET",permalink:"/docsite-poc.github.io/docs/migrated/modeling-your-data/analytics-sdk/analytics-sdk-net/"},next:{title:"Forwarding events to Destinations",permalink:"/docsite-poc.github.io/docs/migrated/forwarding-events-to-destinations/"}},c={},l=[{value:"Overview",id:"overview",level:2},{value:"Event Extractor",id:"event-extractor",level:2},{value:"Usage",id:"usage",level:2}],p={toc:l};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://azure.microsoft.com/en-in/solutions/data-lake/"},"Azure Data Lake")," is a secure and scalable data storage and analytics service. ",(0,a.kt)("a",{parentName:"p",href:"https://azure.microsoft.com/en-in/services/data-lake-analytics/"},"Azure Data Lake Analytics")," includes ",(0,a.kt)("a",{parentName:"p",href:"https://blogs.msdn.microsoft.com/visualstudio/2015/09/28/introducing-u-sql-a-language-that-makes-big-data-processing-easy/"},"U-SQL"),", a big-data query language for writing queries that analyze data."),(0,a.kt)("h2",{id:"event-extractor"},"Event Extractor"),(0,a.kt)("p",null,"Snowplow Event Extractor is an ADLA custom extractor that allows you to parse ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"/docs/migrated/understanding-your-pipeline/canonical-event/"},"Snowplow enriched events")),". Snowplow\u2019s enrichment process outputs enriched events in a TSV format consisting of 131 fields."),(0,a.kt)("p",null,"EventExtractor implements IExtractor interface:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"[SqlUserDefinedExtractor]\npublic class EventExtractor : IExtractor\n{\n    private static readonly string ROW_DELIMITER = '\\t';\n\n    public override IEnumerable<IRow> Extract(IUnstructuredReader input, IUpdatableRow output)\n    {\n       //split the input based on ROW_DELIMITER\n       //set the output data on the output object\n       //EventExtractor only outputs columns and values that are defined with the output. \n    }\n}\n")),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"Following is base U-SQL script that uses a Event Extractor:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'DECLARE @input_file string = @"\\snowplow\\event.tsv";\n\n@rs0 =\n    EXTRACT\n        app_id string,\n        platform string\n    FROM @input_file\n    USING new Snowplow.EventExtractor();\n')),(0,a.kt)("p",null,"The most complex piece of processing is the handling of the self-describing JSONs found in the enriched event's unstruct","_","event, contexts and derived","_","contexts fields.",(0,a.kt)("br",{parentName:"p"}),"\n","Consider contexts found in the tsv:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"{\n    'schema': 'iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0',\n    'data': [{\n        'schema': 'iglu:org.schema/WebPage/jsonschema/1-0-0',\n        'data': {\n            'genre': 'blog',\n            'inLanguage': 'en-US',\n            'datePublished': '2014-11-06T00:00:00Z',\n            'author': 'Devesh Shetty',\n            'breadcrumb': ['blog', 'releases']\n        }\n    }, {\n        'schema': 'iglu:org.w3/PerformanceTiming/jsonschema/1-0-0',\n        'data': {\n            'navigationStart': 1415358089861,\n            'unloadEventStart': 1415358090270,\n            'unloadEventEnd': 1415358090287,\n            'redirectStart': 0,\n            'redirectEnd': 0\n        }\n    }]\n}\n")),(0,a.kt)("p",null,"One of the ways to fetch data from context would be to use user-defined function(UDF):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'DECLARE @input_file string = @"\\snowplow\\event.tsv";\n\n//extract context from tsv\n@rs0 =\n    EXTRACT\n        context string\n    FROM @input_file\n    USING new Snowplow.EventExtractor();\n\n/*\ncontext has nested data array\n*/\n@parseData =\n    SELECT Microsoft.Analytics.Samples.Formats.Json.JsonFunctions.JsonTuple(context, "data[*]").Values AS data_arr,\n    FROM @rs0;\n\n/*\nThe nested data array inside context consists of an array from which we parse the inner data field\n*/\n@parseGenre =\n    SELECT Microsoft.Analytics.Samples.Formats.Json.JsonFunctions.JsonTuple(data_arr, "$.data.genre").Values AS genre,\n    FROM @parseData;\n')),(0,a.kt)("p",null,"The above process can get quite complex.",(0,a.kt)("br",{parentName:"p"}),"\n","So to abstract away the complexity, Snowplow Event Extractor follows a simple mapping:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'DECLARE @input_file string = @"\\snowplow\\event.tsv";\n\n//extract genre from context directly\n@rsGenre =\n    EXTRACT\n        context.data.genre\n    FROM @input_file\n    USING new Snowplow.EventExtractor();\n')))}d.isMDXComponent=!0}}]);